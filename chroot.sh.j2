#!/bin/bash

HOST={{ hostname }}
USERNAME={{ username }}
HOME_DIR="/home/${USERNAME}"

echo DISK="{{ target_drive }}", HOST="$HOST", USERNAME="$USERNAME", HOME_DIR="$HOME_DIR"

# grub as a bootloader (EFI)
grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=boot --removable

# grub as a bootloader (BIOS)
grub-install --target=i386-pc --boot-directory=/boot --recheck --removable {{ target_drive }}

# This makes the grub timeout 0, it's faster than 5 :)
sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/g' /etc/default/grub
grub-mkconfig -o /boot/grub/grub.cfg

# run these following essential service by default
systemctl enable sshd.service
systemctl enable systemd-networkd.service
{% if resolve_mode == "systemd-resolved" %}
  systemctl enable systemd-resolved.service
{% endif %}

echo "$HOST" > /etc/hostname

# adding your normal user with additional wheel group so can sudo
useradd -m -G wheel -s /bin/bash "$USERNAME"
{% if no_password %}
  passwd --delete "$USERNAME"
{% endif %}

# adding public key both to root and user for ssh key access
mkdir -m 700 "$HOME_DIR/.ssh"
mkdir -m 700 /root/.ssh
cp /root/.ssh/authorized_keys "$HOME_DIR/.ssh/"
chown -R "$USERNAME:$USERNAME" "$HOME_DIR/.ssh"

# adjust your timezone here
ln -f -s /usr/share/zoneinfo/{{ timezone }} /etc/localtime

# adjust your name servers here if you don't want to use google
echo {{ locale }} UTF-8 > /etc/locale.gen
locale-gen
echo LANG={{ locale }} > /etc/locale.conf
echo KEYMAP={{ keymap }} > /etc/vconsole.conf

# because we are using ssh keys, make sudo not ask for passwords
echo 'root ALL=(ALL) ALL' > /etc/sudoers
echo '%wheel ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers

# creating the swap file, if you have enough RAM, you can skip this step
{% if swap_size != 0 %}
    echo {{ target_drive }}3 none swap defaults 0 0 >> /etc/fstab
{% endif %}
